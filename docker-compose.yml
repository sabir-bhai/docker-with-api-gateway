version: "3.8"

services:
  api-gateway:
    build:
      context: . 
      dockerfile: apps/api-gateway/Dockerfile
    image: api-gateway:latest
    container_name: api-gateway
    working_dir: /apps/api-gateway
    command: ["npm", "start"]
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: "3000"
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      RABBITMQ_URL: amqp://rabbitmq:5672
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./logs:/apps/api-gateway/logs
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent --show-error http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  user-service:
    build:
      context: .
      dockerfile: apps/user-service/Dockerfile
    image: user-service:latest
    container_name: user-service
    working_dir: /apps/user-service
    command: ["npm", "start"]
    ports:
      - "3001:3000" # Expose on 3001 locally, but service listens on 3000 internally
    environment:
      NODE_ENV: production
      PORT: "3000"
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      RABBITMQ_URL: amqp://rabbitmq:5672
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./logs:/apps/user-service/logs
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent --show-error http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge
